# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        
        aux1 = l1
        aux2 = l2
        r = 0
        head = None
        tail = None
        
        while aux1 or aux2 or r > 0:
            if aux1:
                val1 = aux1.val
                aux1 = aux1.next
            else:
                val1 = 0
            
            if aux2:
                val2 = aux2.val
                aux2 = aux2.next
            else:
                val2 = 0
            
            n = val1 + val2 + r
            r = n / 10
            
            newdigitnode = ListNode(n % 10)
            
            if head == None:
                head = newdigitnode
                tail = newdigitnode
            else:
                tail.next = newdigitnode
                tail = newdigitnode
        
        return head